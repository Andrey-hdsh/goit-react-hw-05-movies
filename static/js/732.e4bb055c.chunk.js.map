{"version":3,"file":"static/js/732.e4bb055c.chunk.js","mappings":"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","sources":["components/API.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY_API = 'c6abe789c2cce447fb640bf7c33e7b21';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `3/trending/all/week?api_key=${KEY_API}&include_adult=false&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchQuery = async query => {\n  try {\n    const response = await axios.get(\n      `3/search/movie?api_key=${KEY_API}&query=${query}&include_adult=false&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `3/movie/${id}?api_key=${KEY_API}&append_to_response=videos,images,credits&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    const response = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY_API}&append_to_response=videos,images,credits&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY_API}&append_to_response=videos,images,credits&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovieCredits } from '../API';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport './cast.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchDataCredits = async () => {\n      setIsLoading(true);\n      try {\n        if (movieId) {\n          const resultFetchCredits = await fetchMovieCredits(movieId);\n          setCredits(resultFetchCredits);\n\n          if (resultFetchCredits && resultFetchCredits.cast) {\n            setCredits(resultFetchCredits);\n          }\n        }\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDataCredits();\n  }, [movieId]);\n\n  return (\n    <div className=\"cast-container\">\n      {isLoading && <Loader />}\n      {credits.length > 0 ? (\n        <ul className=\"cast-list\">\n          {credits.map(credit => (\n            <li key={credit.id}>\n              {credit.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${credit.profile_path}`}\n                  alt={credit.name}\n                />\n              ) : (\n                <p>No image found</p>\n              )}\n              <p>\n                <b>{credit.name}</b>\n              </p>\n              {credit.character ? (\n                <p>Character: {credit.character}</p>\n              ) : (\n                <p>no information</p>\n              )}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        !error && <p> No cast information available</p>\n      )}\n\n      {error && <p>Error, occurred, please reload page.</p>}\n    </div>\n  );\n};\n\nexport default Cast;\n","import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Circles\n      height=\"160\"\n      width=\"160\"\n      color=\"#61d0a9\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;"],"names":["KEY_API","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","stop","apply","arguments","fetchQuery","_ref2","_callee2","query","_context2","results","console","log","_x","fetchMovieDetails","_ref3","_callee3","id","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","credits","setCredits","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchDataCredits","resultFetchCredits","finish","_jsxs","className","children","_jsx","Loader","length","map","credit","profile_path","src","alt","name","character","Circles","height","width","color","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","visible"],"sourceRoot":""}