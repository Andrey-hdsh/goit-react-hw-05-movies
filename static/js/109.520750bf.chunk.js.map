{"version":3,"file":"static/js/109.520750bf.chunk.js","mappings":"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","sources":["components/API.js","components/Loader/Loader.jsx","components/MovieCharacteristics/MovieCharacteristics.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY_API = 'c6abe789c2cce447fb640bf7c33e7b21';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `3/trending/all/week?api_key=${KEY_API}&include_adult=false&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchQuery = async query => {\n  try {\n    const response = await axios.get(\n      `3/search/movie?api_key=${KEY_API}&query=${query}&include_adult=false&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `3/movie/${id}?api_key=${KEY_API}&append_to_response=videos,images,credits&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async id => {\n  try {\n    const response = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY_API}&append_to_response=videos,images,credits&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY_API}&append_to_response=videos,images,credits&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n","import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Circles\n      height=\"160\"\n      width=\"160\"\n      color=\"#61d0a9\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieCharacteristics = ({ infoData }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    infoData;\n  return (\n    <div className=\"container-wrapp\">\n      {infoData.poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n        />\n      ) : (\n        <p>No poster found</p>\n      )}\n\n      <div className=\"movie-details\">\n        <h1>\n          {title} ({new Date(release_date).getFullYear()})\n        </h1>\n        <p>\n          <b>User Score: {Math.floor(vote_average * 10)}%</b>\n        </p>\n        <p>{overview}</p>\n        <p>\n          <b>Genres:</b> {genres.map(genre => genre.name).join(', ')}\n        </p>\n        <p>\n          <b>Additional information</b>\n        </p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCharacteristics;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, Link } from 'react-router-dom';\nimport './movieDetails.css';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport MovieCharacteristics from 'components/MovieCharacteristics/MovieCharacteristics';\nimport { fetchMovieDetails } from 'components/API';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const backLinkRef = useRef(location);\n\n  const [filmInfo, setFilmInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        if (movieId) {\n          const response = await fetchMovieDetails(movieId);\n          setFilmInfo(response);\n        }\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId, setError]);\n\n  return (\n    <div className=\"container\">\n      <Link to={backLinkRef.current.state?.from ?? '/'} className=\"back-link\">\n        <b>BACK</b>\n      </Link>\n      {isLoading && <Loader />}\n      {filmInfo && (\n        <>\n          <MovieCharacteristics infoData={filmInfo} />\n          <Outlet />\n        </>\n      )}\n      {error && (\n        <p className=\"error-message\">\n          Sorry, there is no information about the film at the moment.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n\n\n"],"names":["KEY_API","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","stop","apply","arguments","fetchQuery","_ref2","_callee2","query","_context2","results","_x","fetchMovieDetails","_ref3","_callee3","id","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","_jsx","Circles","height","width","color","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","visible","infoData","poster_path","title","release_date","vote_average","overview","genres","_jsxs","className","children","src","alt","Date","getFullYear","Math","floor","map","genre","name","join","Link","to","_backLinkRef$current$","_backLinkRef$current$2","location","useLocation","movieId","useParams","backLinkRef","useRef","_useState","useState","_useState2","_slicedToArray","filmInfo","setFilmInfo","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","console","log","finish","current","state","from","Loader","_Fragment","MovieCharacteristics","Outlet"],"sourceRoot":""}